// Mocks generated by Mockito 5.1.0 from annotations
// in movie_booking_app/test/user_auth_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_booking_app/user_authentication/core/services/firebase_auth_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFirebaseAuth_0 extends _i1.Fake implements _i2.FirebaseAuth {}

/// A class which mocks [FirebaseAuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthService extends _i1.Mock
    implements _i3.FirebaseAuthService {
  @override
  _i2.FirebaseAuth get auth => (super.noSuchMethod(Invocation.getter(#auth),
      returnValue: _FakeFirebaseAuth_0()) as _i2.FirebaseAuth);
  @override
  _i3.Status get status => (super.noSuchMethod(Invocation.getter(#status),
      returnValue: _i3.Status.Uninitialized) as _i3.Status);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i3.Status changeState(_i3.Status? status) =>
      (super.noSuchMethod(Invocation.method(#changeState, [status]),
          returnValue: _i3.Status.Uninitialized) as _i3.Status);
  @override
  _i4.Future<dynamic> onAuthStateChanged(_i2.User? user) =>
      (super.noSuchMethod(Invocation.method(#onAuthStateChanged, [user]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> signInWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#signInWithEmailAndPassword, [],
              {#email: email, #password: password}),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> createUserWithEmailPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#createUserWithEmailPassword, [],
              {#email: email, #password: password}),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> userSignOut() =>
      (super.noSuchMethod(Invocation.method(#userSignOut, []),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  void addListener(_i5.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i5.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
